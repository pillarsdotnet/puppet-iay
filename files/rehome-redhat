#!/bin/bash
# A script to update /etc/hosts, local IP address, hostname, and route.

# Ensure this script runs as root.
test "$(id -u)" -eq 0 || exec sudo -E "$0" "$@"


# Get the primary network device.
devc=$(ip link | sed -ne 's/^[0-9]\+: *\([^:]\+\): *<BROADCAST.*$/\1/p')

if test -z "$2"
then
  # Called with one argument = unassign the landing-zone IP.

  sleep 1;
  ip addr del "$1" dev "$devc"
  exit 0
fi


# Fetch the landing-ip, gateway, subnet, and domain name.

land=$1
gatw=$2
subn=$3
domn=$4

shift 4

# Populate /etc/hosts with a list of IP addresses and hostnames.

while test -n "$1" && test -n "$2"
do
  addr=$1
  host=$2
  cp /etc/hosts /etc/hosts.bak
  grep -v "^${addr} " /etc/hosts.bak >/etc/hosts
  echo "${addr} ${host}.${domn} ${host}" >>/etc/hosts
  shift 2
done

# The last given IP/Host pair belongs to this host.

# Add the (new) local IP address.

ip addr add "${addr}/${subn}" dev "${devc}"

# Add the default route.

ip route add 0.0.0.0/0 via inet "${gatw}"

# Set the hostname.

hostname "${host}"

# Write /etc/hostname.

hostname -f >/etc/hostname

# Write the ifcfg file.

cat >"/etc/sysconfig/network-scripts/ifcfg-${devc}" <<EOF
BOOTPROTO=none
BROWSER_ONLY=no
DEFROUTE=yes
DEVICE=${devc}
GATEWAY=${gatw}
IPADDR=${addr}
IPV4_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
IPV6_AUTOCONF=no
IPV6_DEFROUTE=no
IPV6_FAILURE_FATAL=no
IPV6INIT=no
NAME=${devc}
ONBOOT=yes
PREFIX=21
PROXY_METHOD=none
TYPE=Ethernet
EOF

# Fork a copy to unassign the landing-zone IP.
/bin/bash -c "${0} ${land}/${subn}" </dev/null &>/dev/null &

exit 0
